@model EverReader.ViewModels.Reader.FindNotesViewModel
@using Evernote.EDAM.Type
@using EverReader.ViewModels.Reader

@{
    ViewBag.Title = String.IsNullOrEmpty(Model.SearchField) ? "Find notes" : Model.SearchField + " - Find notes";
}

<h2>@ViewData["Title"]</h2>
<div class="row">
    <div class="col-md-12">
        <section>
            <form asp-controller="Reader" asp-action="Index" method="post" class="form-horizontal" role="form">
                <h4>Search for notes to begin reading</h4>
                <hr />
                @*<div asp-validation-summary="ValidationSummary.All" class="text-danger"></div>*@
                <div class="form-group" style="margin-bottom: 3px;">
                    <label asp-for="SearchField" class="col-md-2 control-label"></label>
                    
                    <div class="col-md-10">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-search"></span>
                            </span>
                            <input asp-for="SearchField" class="form-control" />
                            
                            &nbsp;<span asp-validation-for="SearchField" class="text-danger"></span>

                            @*&nbsp;<span class="glyphicon glyphicon-info-sign glyphicon-help-icon pull-left" data-toggle="info-popover" data-trigger="hover" data-content="Supports standard Evernote search syntax: e.g. tag:SOME_TAG, intitle:NAME"></span>*@
                            
                        </div>
                    </div>
                </div>
                <div class="form-group" style="margin-bottom: 6px;">
   
                    <div class="col-md-offset-2 col-md-10">

                            @*<span class="glyphicon glyphicon-info-sign glyphicon-help-icon pull-left" data-toggle="info-popover" data-trigger="hover" data-content=""></span>*@
                            <small>Supports standard Evernote search syntax: e.g. tag:SOME_TAG, intitle:NAME</small>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="SortOrder" class="col-md-2 control-label"></label>
                    <div class="col-md-10">
                        <div class="input-group">

                            <select name="SortOrder" id="SortOrder" class="form-control">
                                @foreach (FindNotesViewModel.NoteSortOrderFormatted option in Model.SortOrderOptions)
                                {
                                    if (option.Value == Model.SortOrder)
                                    {
                                        <option value="@option.Value" selected>@option.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@option.Value">@option.Name</option>
                                    }
                                }
                            </select>
                            <span asp-validation-for="SortOrder" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="SortAscending" class="col-md-2 control-label"></label>
                    <div class="col-md-10">
                        <div class="input-group">

                            <input asp-for="SortAscending" class="form-control-checkbox" />

                            &nbsp;<span asp-validation-for="SortAscending" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="ExcludeShortNotes" class="col-md-2 control-label"></label>
                    <div class="col-md-10">
                        <div class="input-group">

                            <input asp-for="ExcludeShortNotes" class="form-control-checkbox" />

                            &nbsp;<span asp-validation-for="ExcludeShortNotes" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-default">Search</button>
                    </div>
                </div>
            </form>
        </section>
@if (Model.SearchResults != null)
{
        <section>
            <div style="padding-bottom: 8px">
                Found <span class="label label-info">@Model.TotalResultsForSearch</span> total results.
                @if (!Model.ExcludeShortNotes || Model.SearchResults.Count == Model.NumberUnfilteredResults)
                {
                    @:Showing results <span class="label label-info">@Model.ResultsRangeMin - @Model.ResultsRangeMax</span>.
                } else {
                   @:Showing <span class="label label-info">@Model.SearchResults.Count</span> notes from range 
                   <span class="label label-info">@Model.ResultsRangeMin - @Model.ResultsRangeMax</span>
                   @:(@Model.NumberResultsExcluded short notes filtered).
                }
                <a asp-action="Search" asp-controller="Reader" asp-route-exclude="@Model.ExcludeShortNotes"  asp-route-sortOrder="@Model.SortOrder"  asp-route-sortAscending="@Model.SortAscending" asp-route-search="@Model.SearchField">Permalink to this search</a>.
                <span class="glyphicon glyphicon-info-sign" data-toggle="info-popover" data-placement="top" data-trigger="hover" data-content="Tip: to save this search, bookmark the permalink" style="top: 2px"></span>
            </div>
            <div style="padding-bottom: 8px">
                Pages:
                @for (int i = 1; i <= Model.NumberOfResultsPages; i++)
                {
                    <a asp-action="Search" asp-controller="Reader" asp-route-exclude="@Model.ExcludeShortNotes" asp-route-sortOrder="@Model.SortOrder" asp-route-sortAscending="@Model.SortAscending" asp-route-search="@Model.SearchField" asp-route-page="@i">@i</a>@:&nbsp;
                }
            </div>
            <table class="table table-striped table-responsive">
                <tr>
                    <th>Note title</th>
                    <th class="hidden-xs">Length</th>
                    <th class="hidden-xs hidden-sm">Created</th>
                    <th class="hidden-xs">Updated</th>
                </tr>
                @foreach (var item in Model.SearchResults)
                {
                <tr>
                    <td>
                        <strong><a asp-action="Read" asp-controller="Reader" asp-route-guid="@item.Guid">@item.Title</a></strong>
                        <br />
                        <small><strong>Notebook:</strong> @item.BaseNoteMetadata.NotebookName</small>
                        @*<div class="grid">
                            <div class="row">
                                <div class="col-md-3" style="display:inline-block; float: none">
                                    <small><strong>Notebook:</strong> @item.BaseNoteMetadata.NotebookName</small>
                                </div>
                                <div class="col-md-6" style="display:inline-block; float: none">
                                </div>
                            </div>
                        </div>*@
                        @if (item.TagNames != null && item.TagNames.Count > 0)
                        {
                            <br />
                            <small><strong>Tags:</strong> @String.Join(", ", item.TagNames.ToArray())</small>
                        }
                        @if (!String.IsNullOrWhiteSpace(item.Source))
                        {
                            <br />
                            <small><strong>Source:</strong> @item.Source</small>
                        }
                        @if (!String.IsNullOrWhiteSpace(item.SourceUrl))
                        {
                            if (!item.BaseNoteMetadata.SourceUrl.StartsWith("file://"))
                            {
                                <br />
                                <span class="hidden-xs hidden-sm">
                                    <small><strong>URL:</strong> <a href="@item.BaseNoteMetadata.SourceUrl">@item.BaseNoteMetadata.SourceUrl</a></small>
                                </span>
                                <span class="visible-xs visible-sm">
                                    <small><strong><a href="@item.BaseNoteMetadata.SourceUrl">Source URL</a></strong></small>
                                </span>
                            }
                        }
                        @if (!String.IsNullOrWhiteSpace(item.BaseNoteMetadata.SourceApplication))
                        {
                            <br />
                            <small>@item.BaseNoteMetadata.SourceApplication</small>
                        }                     
                        <span class="visible-xs"><small><strong>Length: </strong>@item.ContentLength</small></span>
                    </td>
                    <td class="hidden-xs">@item.ContentLength</td>
                    <td class="hidden-xs hidden-sm">@item.CreatedDateTime.ToShortDateString()</td>
                    <td class="hidden-xs">@item.UpdatedDateTime.ToShortDateString()</td>
                </tr>
                }
            </table>
        </section>
}

    </div>
</div>
<div class="row">
    <div class="col-md-12">

    </div>
</div>

@section scripts {
<script>
    $(document).ready(function () {
        $('[data-toggle="info-popover"]').popover();
    });
</script>
}
