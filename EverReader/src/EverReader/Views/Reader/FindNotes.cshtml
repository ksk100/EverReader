@model EverReader.ViewModels.Reader.FindNotesViewModel

@{
    ViewBag.Title = "Find notes";
}

<h2>@ViewData["Title"]</h2>
<div class="row">
    <div class="col-md-12">
        <section>
            <form asp-controller="Reader" asp-action="Index" method="post" class="form-horizontal" role="form">
                <h4>Search for notes to begin reading</h4>
                <hr />
                @*<div asp-validation-summary="ValidationSummary.All" class="text-danger"></div>*@
                <div class="form-group">
                    <label asp-for="SearchField" class="col-md-2 control-label"></label>
                    <div class="col-md-10">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-search"></span>
                            </span>
                            <input asp-for="SearchField" class="form-control" />
                            <span asp-validation-for="SearchField" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-default">Search</button>
                    </div>
                </div>
            </form>
        </section>
@if (Model.SearchResults != null)
{
        <section>
            <table class="table table-striped table-responsive">
                <tr>
                    <th>Note title</th>
                    <th>Length</th>
                    <th class="hidden-xs hidden-sm">Created</th>
                    <th class="hidden-xs">Updated</th>
                </tr>
                @foreach (var item in Model.SearchResults)
                {
                <tr>
                    <td>
                        <strong><a asp-action="Read" asp-controller="Reader" asp-route-guid="@item.BaseNoteMetadata.Guid">@item.Title</a></strong>
                        @if (!String.IsNullOrWhiteSpace(item.Source))
                        {
                            <br />
                            <small><strong>Source:</strong> @item.Source</small>
                        }
                        @if (!String.IsNullOrWhiteSpace(item.BaseNoteMetadata.Attributes.SourceURL))
                        {
                            if (!item.BaseNoteMetadata.Attributes.SourceURL.StartsWith("file://"))
                            {
                                <br />
                                <small><strong>URL:</strong> <a href="@item.BaseNoteMetadata.Attributes.SourceURL">@item.BaseNoteMetadata.Attributes.SourceURL</a></small>
                            }
                        }
                        @if (!String.IsNullOrWhiteSpace(item.BaseNoteMetadata.Attributes.SourceApplication))
                        {
                            <br />
                            <small>@item.BaseNoteMetadata.Attributes.SourceApplication</small>
                        }
                    </td>
                    <td>@item.ContentLength</td>
                    <td class="hidden-xs hidden-sm">@item.CreatedDateTime.ToShortDateString()</td>
                    <td class="hidden-xs">@item.UpdatedDateTime.ToShortDateString()</td>
                </tr>
                }
            </table>
        </section>
}

    </div>
</div>
<div class="row">
    <div class="col-md-12">

    </div>
</div>

